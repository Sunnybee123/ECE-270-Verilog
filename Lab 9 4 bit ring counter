`default_nettype none
// Empty top module

module top (
   // I/O ports
  input  hz100, reset,
  input  [20:0] pb,
  output [7:0] left, right,
         ss7, ss6, ss5, ss4, ss3, ss2, ss1, ss0,
  output red, green, blue,

  // UART ports
  output [7:0] txdata,
  input  [7:0] rxdata,
  output txclk, rxclk,
  input  txready, rxready
);

  // Your code goes here...
  
  
  hc74_set set(.c(pb[0]), .d(pb[1]), .q(right[0]), .sn(pb[16]));
  hc74_reset reset1(.c(pb[0]), .d(pb[1]), .q(right[1]), .rn(pb[16]));
  hc74_reset reset2(.c(pb[0]), .d(pb[1]), .q(right[2]), .rn(pb[16]));
  hc74_reset reset3(.c(pb[0]), .d(pb[1]), .q(right[3]), .rn(pb[16]));
  
  
endmodule

module hc74_set(input logic d, c, sn,
                  output logic q, qn);
  assign qn = ~q;
  always_ff @(posedge c, negedge sn)
    if (sn == 1'b0)
      q <= 1'b1;
    else
      q <= d;
endmodule


module hc74_reset(input logic d, c, rn,
                  output logic q, qn);
  assign qn = ~q;
  always_ff @(posedge c, negedge rn)
    if (rn == 1'b0)
      q <= 1'b0;
    else
      q <= d;
endmodule

module ssdec(
  input logic[3:0] in,
  output logic [6:0] out,
  input logic enable
  );
  
  logic [6:0] light[15:0];
  
  assign light[4'h0] = 7'b0111111;
  assign light[4'h1] = 7'b0000110;
  assign light[4'h2] = 7'b1011011;
  assign light[4'h3] = 7'b1001111;
  assign light[4'h4] = 7'b1100110;
  assign light[4'h5] = 7'b1101101;
  assign light[4'h6] = 7'b1111101;
  assign light[4'h7] = 7'b0000111;
  assign light[4'h8] = 7'b1111111;
  assign light[4'h9] = 7'b1100111;
  assign light[4'ha] = 7'b1110111;
  assign light[4'hb] = 7'b1111100;
  assign light[4'hc] = 7'b0111001;
  assign light[4'hd] = 7'b1011110;
  assign light[4'he] = 7'b1111001;
  assign light[4'hf] = 7'b1110001;
  
  
  assign out = enable ? light[in]:0;
  
  endmodule
